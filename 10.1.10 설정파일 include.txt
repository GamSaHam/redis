
레디스 설정 파일은 include 기능을 제공한다. 즉, 기본 설정을 가진 파일과
인스턴스별로 다른 설정을 별도의 파일로 분리하여 사용할 수 있다.

# 레디스 기본 설정
port 6379
loglevel notice

include /var/redis-stable/slave.conf

slaveof 192.168.56.103 6379
masterauth foobar

include와 같이 부가적인 설정을 별도의 파일로 저장해 두고 include 설정을 사용하여 다른 파일에
저장된 설정 내용을 불러서 사용할 수 있다. 마스터 슬레이브 복제와 같은 설정에서 사용된다.

10.2 서버 중지 없는 환경 설정

레디스의 config set 명령은 레디스가 동작중일때 즉시 반영하는 방법을 제공한다. 영구적이지 않으며
인스턴스가 중지되면 같이 사라진다.
그러므로 config set 명령을 사용하여 지정한 설정은 반드시 설정 파일에도 동일하게 적용해야 한다.


config set loglevel debug

config get 명령을 통해서 지정된 설정값을 조회 할 수 있다.
config get *

keys 명령에 사용되는 'glob-style' 패턴을 사용할 수 있다.

config set 명령을 사용하여 지정할수 있는 것과 없는 것이 있는데 port 설정은 지정할수 없다. 소켓 프로세스가
실행될 떄 지정되기 때문이다.

레디스 2.8 버전과 github unstable branch에서는 CONFIG REWRITE 명령어가 추가되어 있다.

이 명령은 동작 중인 인스턴스의 설정을 redis.conf에 다시 기록한다.

10.3 레디스 스냅샷
레디스는 데이터의 영구 저장을 위하여 메모리에 저장된 모든 데이터를 디스크로 저장하며 이것을 스냅샷이라고
부른다. 간단히 말해서 특정 시점의 데이터를 그대로 디스크에 백업하는 것과 같다.

스냅샷의 결과로 dump.rdb 파일이 생성되는데 이 파일을 사용하여 해당 시점의 데이터로 복원할 수 있다.

레디스 스냅샷은 리눅스의 fork 함수에 의해서 동작한다. 즉, 스냅샷이 시작되면 리눅스 시스템 함수인 fork 함수를
호출하여 자식 프로세스를 생성하고, 생성된 자식 프로세스가 메모리의 내용을 디스크로 저장한다.
물론 드냅샷이 동작하여 데이터가 디스크로 저장되는 동안에도 레디스는 정삭적으로 클라이언트의 데이터 명령을
수행한다. 

레디스의 스냅샷 파일은 하위 호환성을 가진다. 레디스 2.2버전에서 생성한 스냅샷 파일은 레디스 2.6 버전
으로 복원하면 모든 데이터가 정상적으로 로드된다. 

리눅스의 COW의 대한 이해가 필요하다. COW란 동일한 메모리 영역을 공유하는 두 개의 프로세스 중에서 어느 하나
가 메모리의 특정 영역을 변경하면 내용만 다른 메모리 영역을 복사하는 것을 말한다.

부모의 프로세스가 자식 프로세스와 동일한 메모리 영역을 참조하게 된다.

부모 프로세스는 레디스 클라이언트로부터 수신된 레디스 명령을 처리하기 때문에 메모리의 데이터가 변경된다.
리눅스 시스템은 메모리를 페이지 단위로 관리하기 때문에 변겨오딘 메모리 페이지를 복사하여 부모 프로세스가 
가지게 되며 자식 프로세스는 변경된 내용을 알지 못한다. 

전체 메모리 = 자식 프로세스의 메모리 크기 + 부모 프로세스가 변경한 페이지 개수 * 4KB

fork 함수가 호출되어 자식 프로세스가 종료되기 전에 모든 페이지가 변경된다면 레디스는 메모리를 최대 2배 만큼
사용하게 된다. 그러므로 스냅샷을 사용할 때는 자신의 서비스가 쓰기 위주의 서비스인지를 먼저 확인하여
메모리 사용 정책을 정의해야 한다.








