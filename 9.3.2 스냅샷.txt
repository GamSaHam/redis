
AWS와 같은 가상 환경에서 레디스를 서비스한다면 스냅샷 파일의 위치는 반드시 로컬 파일 시스템을 사용해야 한다.

AWS 예로 들면 로컬 파일 시스템이 아닌 EBS(Elastic Block Store)에 스냅샷을 저장하는 것은 권장하지 않는다.

레디스는 AOF와 스냅샷을 위해서 fork 함수와 COW(Copy On Write)를 사용하여 백그라운드 프로세스를 생성한다.

fork 함수는 운영체제의 입장에서 매우 비싼 수행이 필요하다.

레디스는 단일 스레드로 동작하기 때문에 fork 함수가 완료되기 전에는 다른 명령을 수행하지 못한다.

여기서 fork 함수의 완료란 메인 프로세스에서 frok 함수가 수행되어 자식 프로세스 생성이 완료되기 까지의 시간을 말한다.

AWS는 Xen 플랫폼을 사용하고 있기 때문에 레디스의 fork 함수 수행 시간이 매우 길다.

예를 들어 10GB 데이터가 저장된 레디스 인스턴스에서 스냅샷이나 AOF 이벤트가 발생되어 fork 함수가 수행되면 약 3초 동안 레디스 명령을

수행하지 못하게 된다. 운영 시스템에서 초당 2만 번의 데이터를 처리하는 중에 이와 같은 상황이 발생하면 명령의 응답 레이턴시가 증가하는

문제가 발생할 수 있다.

AWS와 Cluster Compute 인스턴스 사용을 고려할 수 있지만, 이 인스턴스는 매우 비싸기 때문에 가상화 시스템의 장점인 저렴한 비용의 효과를 

누릴 수 없게 된다. 

마지막으로 솔라리스 운영체제에서는 COW가 지원되지 않는다. 그러므로 솔라리스 운영체제에서 fork 함수가 동작하면 반드시

두 배의 메모리가 소요된다. 이때 충분한 물리 메모리 공간이 남아있지 않다면 운영체제는 레디스가 사용하고 있는 메모리의 영역을

스왑영역으로 복사하게 되고 스냅샷과 AOF를 처리하는 시간이 매우 길어지게 된다.


9.3.5 복제 구성

레디스 복제를 구성할때 하나의 마스터에 너무 많은 슬레이브를 구성하지 않도록 한다.

여기에는 두가지 이유가 있는데

첫 번째 데이터 복제하기 위한 네트워크 사용률이 데이터 서비스를 위한 네트워크 사용률보다 커지게 되어 매우 느린 응답시간을 보이게 된다.

이와 같은 상황을 방지하기 위해서 복제를 위한 별도의 네트워크 카드를 설정하는 방법과 복제를 위한 별도의 스위치 허브를 사용하는 구성을

고려해야 한다. 

두 번째로 각 슬레이브 노드에서 요청되는 데이터 복제 요청에 응답하기 위하여 리소스 대부분을 사용하게 되어 쓰기 요청이 지연된다.

9.4 마치며

레디스는 동일한 단위 시간 안에 매우 많은 요청을 처리한다. 레디스 클러스터를 구성할 때는 반드시 임계점에 대한 측정이

선행되어야 한다.




