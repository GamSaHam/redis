
레디스를 운영하다 보면 메모리가 많은데도 불구하고 fork 함수의 수행이 실패하는 경우가 있다.

fork 함수는 부모 프로세스와 동일한 메모리를 사용하는 프로세스를 생성한다.

리눅스에서 부모 프로세스가 사용하는 만큼의 메모리가 남아있지 않으면 fork 함수가 실패 하게 된다.

스냅샷이나 AOF를 위해서 호출한 fork 함수가 실패한 이후의 레디스는 모든 쓰기 연산에 실패 응답을 전송한다.

4GB의 데이터를 가진 레디스를 운용하기 위해서는 반드시 4GB 이상의 유휴 메모리가 필요하다는 결론이 도출된다.

현재 부모 프로세스의 메모리를 읽어서 디스크에 저장하기 때문이다. 추가적인 4GB의 메모리가 존재하지 않으면 fork 함수가 실패한다.

이런 현상을 방지하기 위해서 리눅스의 /etc/sysctl.conf 파일 vm.overcommit_memory=1 옵션을 추가해야 한다. 

1: 메모리 할당 요청인 malloc 함수의 요청이 들어오면 남은 물리 메모리가 없더라도 성공을 응답한다. 단, 요청으로 입력된 크기의
스왑영역이 존재할 때에만 성공한다.

시스템
물리 메모리 8GB
운영체제 1GB
레디스 7GB

스왑영역 8GB

fork 함수의 수행이 되면 자식 프로세스는 COW*에 의해 부모 프로세스의 메모리 페이지 테이블을 복사하여 스왑영역에 저장하게 된다.
이 상태에서 부모 프로세스에 읽기 연산만 들어온다면 레디스의 응답시간에는 문제가 없다. 

응답시간을 줄이기 위해 스왑영역에 레디스에 저장된 데이터 크기보다 작게 잡으면 OOM 킬러에 의해서 레디스 프로세스가 종료될 수 있다.

레디스 프로세스 종료를 막기 위해서 스왑영역을 크게 잡는다면 fork 함수가 수행되는 시간 동안 응답시간이 길어 질 수 있다.

8GB 물리 메모리를 가진 시스템을 예로 들어보자. 이 상태에서 저장 가능한 데이터의 크기는 서비스에서 수행되는 쓰기 연산과

읽기 연산에 따라 달라진다. 

전체 연산횟수가 100이라 고하면 쓰기 연산의 비율이 50을 넘는다면 물리 메모리의 60%를 지정하는 것이 적당하다. 

이 값을 기준으로 쓰기 비율이 줄어들수록 지정 가능한 메모리의 비율을 늘릴 수 있다. 보수적인 서비스거나 응답시간에 민감한 

서비스라면 50% 이하로 설정하는 편이 더 안전하다.

주요 스트레스 테스트는 리눅스에서 수행되고있다. 












