
레디스 데이터 처리량 확장을 위한 분산 기법에 관하여 알아보자.

A서버가 1초에 처리할수 있는 요청이 100개라고 가정
이때 서비스를 위해서 필요한 성능이 300이라면 이 조건을 만족하도록 아키텍처를 구성하는 방법은 두가지다.
A 서버의 3배가 되는 성능의 서버로 바꾸는 방법이다.
이 방법은 전통적인 관계형 데이터베이스에서는 가능하지만, 레디스에서는 제대로 먹혀들지 않는다. 
레디스는 단일 스레드로 동작하기 때문에 하나의 레디스 인스턴스가 사용할 수 있는 최대 CPU의 개수는 하나다.

2. 동일한 사양의 시스템을 추가하는 방법 통상적으로 NoSQL에서 사용하는 스케일 아웃에 해당한다.

레디스에 스케일 아웃을 적용하기 위해서 동일한 사양의 하드웨어를 3대로 늘리는 방법을 생각해보자. 

레디스는 스케일 아웃을 처리하기 위한 방법으로 두 가지 기법을 제공한다.

읽기 분산을 위한 복제(Replication)와 쓰기 분산을 위한 샤딩(sharding)에 해당한다.

레디스의 확장 방법을 알아보기 전에 용어에 대하여 알아보자.

레디스 클러스터에 포함되는 설명에는 노드로 표현하며 클러스터가 아닌 별도의 단일 서버에 대한 설명에서는 레디스
인스턴스로 표현한다.

복제: 클라이언트가 어느 노드에 접근하더라도 동일한 데이터를 읽을 수 있도록 데이터를 각 노등에 복제하여 저장하는 것을 말한다.

샤딩: 데이터를 특정 조건에 따라 나누어 저장하는 것을 말한다. 예를 들어 1부터 10까지 10개의 데이터를 두 대의 노드를
사용하여 샤딩을 수행한다고 가정하자. 이때 첫 번째 노드에 1부터 5까지의 데이터를 저장하고 두 번째 노드에 6부터
10까지의 데이터를 저장하여 데이터를 분할 저장하는 방법을 샤딩이라 말한다.

샤드: 두 개의 노드를 사용하여 데이터를 분할 저장하였을 때 각 노드를 샤드라고 부른다. 만약 각 샤드가 복제를 사
용하여 여러 개의 노드로 구성될 때에도 하나의 샤드로 취급한다.

복제와 샤딩을 통하여 레디스의 처리 성능을 증가시킬 수 있다. 이번 장에서는 레디스를 사용한 스케일 아웃 방법에
대하여 알아보고 각각의 장단점에 대하여 알아보자. 더불어 스케일 아웃의 두 가지 기법을 모두 혼용하는 방법에 대해서도 알아본다.














